Inst(PtrRight, {value(); tape += o->off; check_right();})
Inst(PtrRight1, {tape++; check_right();})
Inst(PtrLeft, {value(); tape -= o->off; check_left();})
Inst(PtrLeft1, {tape--; check_left();})
Inst(Inc, {value(); *tape += o->off;})
Inst(Inc1, {(*tape)++;})
Inst(Dec, {value(); *tape -= o->off;})
Inst(Dec1, {(*tape)--;})
Inst(Putchar, {putchar_unlocked(*tape);})
Inst(Getchar, {*tape = getchar_unlocked();})
Inst(Jmp, {value(); jmp();})
//Jnz must only be generated if it would be equivalent to Jmp
Inst(Jnz, {value(); if (*tape) jmp();})
Inst(Jz, {value(); if (!*tape) jmp();})
Inst(Set0, {*tape=0;})
Inst(Set1, {*tape=1;})
Inst(Set, {value(); *tape = o->off;})
Inst(Return, {goto out;})
